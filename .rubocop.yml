require:
  - rubocop-rspec
  - rubocop-performance
  - rubocop-rails
  - rubocop-thread_safety

AllCops:
  NewCops: enable
  TargetRubyVersion: 3.3.5
  SuggestExtensions: false
  Exclude:
    - 'db/**/*'
    - 'bin/**/*'
    - 'tmp/**/*'
    - 'vendor/**/*'
    - 'db/schema.rb'

# Align `when` with `end`.
Layout/CaseIndentation:
  Enabled: true
  EnforcedStyle: end

# Align comments with method definitions.
Layout/CommentIndentation:
  Enabled: true

Layout/ElseAlignment:
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular method definition, no empty lines around the body.
Layout/EmptyLinesAroundMethodBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

Layout/IndentationStyle:
  EnforcedStyle: spaces

Layout/IndentationWidth:
  Width: 2

Layout/LeadingCommentSpace:
  Enabled: true

Layout/LineLength:
  Max: 140
  AllowedPatterns: ['\A#'] # Allow long comments (annotate gem might generates long comments)

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true

# Use `->(x, y) { x + y }` not `-> (x, y) { x + y }`
Layout/SpaceInLambdaLiteral:
  Enabled: true

# Use `[ a, [ b, c ] ]` not `[a, [b, c]]`
# Use `[]` not `[ ]`
Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBrackets: no_space

# Use `%w[ a b ]` not `%w[ a   b ]`.
Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
# Use `foo { }` not `foo {}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyleForEmptyBraces: space

# Use `{ a: 1 }` not `{a:1}`.
# Use `{}` not `{  }`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space

# Use `foo(bar)` not `foo( bar )`
Layout/SpaceInsideParens:
  Enabled: true

# Use `%w[ foo ]` not `%w[foo]`
Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: false

# Use `hash[:key]` not `hash[ :key ]`
Layout/SpaceInsideReferenceBrackets:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingEmptyLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

Lint/AmbiguousBlockAssociation:
  Exclude:
    - spec/**/*

Lint/RedundantStringCoercion:
  Enabled: true

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Metrics/BlockLength:
  Exclude:
    - config/**/*
    - spec/**/*
    - lib/**/*

Naming/MethodName:
  EnforcedStyle: snake_case

Metrics/MethodLength:
  Max: 25

Naming/FileName:
  Enabled: true

Naming/VariableName:
  Enabled: true

Performance:
  Exclude:
    - "spec/**/*"

Performance/FlatMap:
  Enabled: true

Performance/UnfreezeString:
  Enabled: true

Rails/HasManyOrHasOneDependent:
  Enabled: false

Rails/InverseOf:
  Enabled: false

Rails/TimeZone:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

RSpec/MultipleExpectations:
  Max: 10

RSpec/MultipleMemoizedHelpers:
  Max: 10

RSpec/NestedGroups:
  Max: 7

# We generally prefer &&/|| but like low-precedence and/or in context
Style/AndOr:
  Enabled: false

Style/ClassAndModuleChildren:
  EnforcedStyle: nested

# Use `class << self` for class methods.
Style/ClassMethodsDefinitions:
  Enabled: true
  EnforcedStyle: self_class

# Prefer Foo.method over Foo::method
Style/ColonMethodCall:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true
  EnforcedShorthandSyntax: either

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    default: "()"
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"

# Use quotes for string literals when they are enough.
Style/RedundantPercentQ:
  Enabled: false

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

Style/StabbyLambdaParentheses:
  Enabled: true

# Use `"foo"` not `'foo'` unless escaping is required
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArguments:
  Enabled: true

Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma

Style/QuotedSymbols:
  EnforcedStyle: single_quotes